name: CI/CD - TelcoNova (PRO)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  PROD_BASE_URL: https://telconona-frontend.vercel.app

jobs:

  install-deps:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Build app
        run: npm run build

  unit-tests:
    name: Run Unit Tests & Coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Run tests with coverage
        run: npm run test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Install sonar-scanner
        run: npm install -g sonar-scanner

      - name: Run SonarCloud analysis
        env:
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_ORG_KEY: ${{ env.SONAR_ORG_KEY }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_PROJECT_KEY }}
        run: |
          sonar-scanner \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.organization=$SONAR_ORG_KEY \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.qualitygate.wait=true

  deploy:
    name: Deploy to Vercel & E2E
    runs-on: ubuntu-latest
    #needs: sonarcloud
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Variables
        run: vercel pull --yes --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel deploy --prod --confirm --token ${{ secrets.VERCEL_TOKEN }}
